basePath: /
definitions:
  models.Issue:
    properties:
      description:
        type: string
      due_date:
        type: string
      id:
        type: string
      priority:
        $ref: '#/definitions/models.PriorityType'
      project_id:
        type: string
      status:
        $ref: '#/definitions/models.StatusType'
      status_id:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  models.PriorityType:
    enum:
    - DEFAULT
    - MEDIUM
    - HIGH
    - URGENT
    - CRITICAL
    type: string
    x-enum-varnames:
    - Default
    - Medium
    - High
    - Urgent
    - Critical
  models.Project:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        type: string
      status:
        type: string
      tags:
        items:
          type: string
        type: array
      teams_id:
        items:
          type: string
        type: array
    type: object
  models.Role:
    properties:
      id:
        type: string
      project_id:
        type: string
      role:
        type: string
      user_id:
        type: string
    type: object
  models.Status:
    properties:
      created_at:
        type: string
      id:
        type: string
      issues_id:
        items:
          type: string
        type: array
      name:
        type: string
      project_id:
        type: string
      updated_at:
        type: string
    type: object
  models.StatusType:
    enum:
    - TODO
    - IN_PROGRESS
    - REVIEW
    - DONE
    - BLOCKED
    type: string
    x-enum-varnames:
    - TODO
    - IN_PROGRESS
    - REVIEW
    - DONE
    - BLOCKED
  models.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      is_admin:
        type: boolean
      isverified:
        type: boolean
      password:
        type: string
      project_size:
        type: integer
      verificationtoken:
        type: string
    type: object
  request.ProjectInviteRequest:
    properties:
      email:
        type: string
      project_id:
        type: string
    type: object
  request.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: doguhannilt@gmail.com
    name: Doguhan Ä°lter
  description: This is the API documentation for the Managify project management application.
    It provides endpoints for managing projects, issues, users, roles, statuses, and
    project invites.
  title: Managify API
  version: "1.0"
paths:
  /issues:
    post:
      consumes:
      - application/json
      description: Creates a new issue in the system.
      parameters:
      - description: Issue to create
        in: body
        name: issue
        required: true
        schema:
          $ref: '#/definitions/models.Issue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new issue
      tags:
      - Issues
  /issues/{id}:
    delete:
      description: Deletes an issue by its ID.
      parameters:
      - description: Issue ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an issue
      tags:
      - Issues
  /issues/{issueID}/status/{statusID}:
    patch:
      description: Updates the status of an issue.
      parameters:
      - description: Issue ID
        in: path
        name: issueID
        required: true
        type: string
      - description: New Status ID
        in: path
        name: statusID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update issue status
      tags:
      - Issues
  /issues/project/{projectID}/oncoming:
    get:
      description: Retrieves issues that are due soon for a specific project.
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get oncoming issues for a project
      tags:
      - Issues
  /issues/status/{statusID}:
    get:
      description: Retrieves all issues associated with a specific status ID.
      parameters:
      - description: Status ID
        in: path
        name: statusID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get issues by status ID
      tags:
      - Issues
  /project-invites:
    post:
      consumes:
      - application/json
      description: Creates a new invite for a project.
      parameters:
      - description: Project Invite Request
        in: body
        name: invite
        required: true
        schema:
          $ref: '#/definitions/request.ProjectInviteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new project invite
      tags:
      - ProjectInvites
  /project-invites/{id}:
    get:
      description: Retrieves project invites by user or project ID.
      parameters:
      - description: User or Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get project invites by ID
      tags:
      - ProjectInvites
  /project-invites/{inviteId}/respond:
    patch:
      description: Accepts or declines a project invite.
      parameters:
      - description: Invite ID
        in: path
        name: inviteId
        required: true
        type: string
      - description: Action (accept/decline)
        in: query
        name: action
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Respond to a project invite
      tags:
      - ProjectInvites
  /projects:
    post:
      consumes:
      - application/json
      description: Creates a new project in the system.
      parameters:
      - description: Project to create
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.Project'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new project
      tags:
      - Projects
  /projects/{id}:
    delete:
      description: Deletes a project by its ID.
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a project
      tags:
      - Projects
    get:
      description: Retrieves a project by its ID, including its statuses and team
        members.
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get a project by ID
      tags:
      - Projects
  /projects/member/{memberId}:
    delete:
      description: Deletes a member from a project using the member's ID.
      parameters:
      - description: Member ID
        in: path
        name: memberId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a member from a project by member ID
      tags:
      - Projects
  /roles:
    post:
      consumes:
      - application/json
      description: Creates a new role in a project. Only project owners can add roles.
      parameters:
      - description: Role to create
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new role
      tags:
      - Projects
  /roles/{id}:
    delete:
      description: Deletes a role by its ID.
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a role
      tags:
      - Projects
  /statuses:
    post:
      consumes:
      - application/json
      description: Creates a new status in the system.
      parameters:
      - description: Status to create
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/models.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new status
      tags:
      - Statuses
  /statuses/{id}/project/{project}:
    delete:
      description: Deletes a status by its ID for a specific project.
      parameters:
      - description: Status ID
        in: path
        name: id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a status
      tags:
      - Statuses
  /users/{id}:
    get:
      description: Retrieves a user by their ID, along with associated projects and
        subscription details.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token.
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/request.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Registers a new user in the system.
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Users
  /users/verify-email:
    get:
      description: Verifies a user's email using a token.
      parameters:
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify user email
      tags:
      - Users
swagger: "2.0"
